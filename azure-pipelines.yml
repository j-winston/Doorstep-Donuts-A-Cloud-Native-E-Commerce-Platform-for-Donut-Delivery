# Starter pipeline Start with a minimal pipeline that you can customize to build and deploy your code. Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- Main
- pipeline-fix

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build 
    displayName: 'Build and Test'
    jobs:
      - job: Build 
        displayName: 'Build the Project'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet
        # Restore Dependencie
          - script: dotnet restore
            displayName: 'Restore Dependencies'

        # Build in Release Mode
          - script: dotnet build --configuration Release --no-restore 
            displayName: 'Build the project'

        # Run unit tests 
          - script: dotnet test --configuration Release --no-build --verbosity normal 
            displayName: 'Run tests'

        # Publish build artificats 
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifact: 'drop'
              publishLocation: 'pipeline'

  - stage: Deploy_Dev
    displayName: 'Deploy to Development'
    dependsOn: Build
    condition: succeeded() 

    jobs:
      - job: DeployDev
        displayName: 'Deploy to Azure App Service'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - download: current
            artifact: drop 

          # Deploy to azure app service
          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy to Azure App Service'
            inputs:
              azureSubscription: 'AzureServiceConnection' 
              WebAppName: 'doorstep-donuts-dev'
              AppSettings: '-WEBSITE_RUN_FROM_PACKAGE 0'
              packageForLinux : '$(Pipeline.Workspace)/drop'
          

              
